{"version":3,"file":"static/js/227.12387641.chunk.js","mappings":"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","sources":["webpack://desafio-mb-web/./src/styles/styles.module.scss?694d","components/CustomAlert/index.tsx","webpack://desafio-mb-web/./src/components/DynamicButton/dynamic-button.module.scss?cc2a","components/DynamicButton/index.tsx","validators/validateCnpj.ts","validators/index.ts","validators/validateEmail.ts","validators/validatePassword.ts","validators/validateCPF.ts","validators/validateNome.ts","validators/validateDataNascimento.ts","validators/validateTelefone.ts","validators/validateRazaoSocial.ts","validators/validateDataAbertura.ts","util/dataMaskFormat.ts","components/DynamicInput/index.tsx","util/inputMaskFormat.ts","util/cpfMaskFormat.ts","util/telefoneMaskFormat.ts","util/cnpjMaskFormat.ts","components/InputAlert/index.tsx","webpack://desafio-mb-web/./src/components/Stepper/stepper.module.scss?105e","components/Stepper/index.tsx","enum/AlertMessageProps.ts","enum/ButtonProps.ts","enum/InputIds.ts","hooks/useFormData.ts","pages/Etapa4PF/index.tsx","api/index.ts","services/registerUser/index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonstyled\":\"styles_buttonstyled__4b+TJ\"};","import style from \"../../styles/styles.module.scss\";\r\n\r\ninterface Props {\r\n  message: string;\r\n  onClose: () => void;\r\n  onClickRegistrarUsuario: () => void;\r\n  tryAgainButton?: boolean;\r\n}\r\n\r\nexport default function CustomAlert({\r\n  message,\r\n  onClose,\r\n  onClickRegistrarUsuario,\r\n  tryAgainButton,\r\n}: Props) {\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center\">\r\n      <div className=\"bg-white p-4 rounded-lg shadow-lg max-w-sm\">\r\n        <p className=\"text-gray-800\">{message}</p>\r\n        <div className=\"flex justify-end space-x-4 mt-4\">\r\n          {tryAgainButton && (\r\n            <button\r\n              onClick={onClickRegistrarUsuario}\r\n              className={`${style.buttonstyled} px-4 py-2 text-white rounded transition-colors\"`}\r\n            >\r\n              Tentar novamente\r\n            </button>\r\n          )}\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-700 transition-colors\"\r\n          >\r\n            Fechar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contiuarbutton\":\"dynamic-button_contiuarbutton__rwNgg\",\"voltarbutton\":\"dynamic-button_voltarbutton__lXrax\",\"disabled\":\"dynamic-button_disabled__CX2Ge\"};","import styles from \"./dynamic-button.module.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  to?: string;\r\n  label: string;\r\n  buttonWidth?: string;\r\n  disableButton?: boolean;\r\n  onClickRegistrarUsuario?: () => void;\r\n}\r\n\r\nexport default function DynamicButton({\r\n  to,\r\n  label,\r\n  buttonWidth,\r\n  disableButton,\r\n  onClickRegistrarUsuario,\r\n}: Props) {\r\n  const navigate = useNavigate();\r\n\r\n  to = \"/\" + to;\r\n\r\n  const handleClick = () => {\r\n    if (label === \"Voltar\") {\r\n      navigate(-1);\r\n    } else if (label === \"Cadastrar\" && onClickRegistrarUsuario) {\r\n      onClickRegistrarUsuario();\r\n    }\r\n    else {\r\n      navigate(to);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={{ width: buttonWidth ? buttonWidth : \"100%\" }}\r\n      onClick={!disableButton && label !== \"Voltar\" ? undefined : handleClick}\r\n      className={`${\r\n        label === \"Voltar\" ? styles.voltarbutton : styles.contiuarbutton\r\n      }\r\n        ${!disableButton && label !== \"Voltar\"&& styles.disabled}\r\n        inline-block px-4 py-2 text-white font-semibold text-sm rounded-lg shadow-md \r\n        focus:outline-none focus:ring-2 focus:ring-opacity-75`}\r\n      disabled={!disableButton && label !== \"Voltar\"}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nconst cnpjRegex = /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/;\r\n\r\nexport function validateCnpj(value: string): string | undefined {\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (!cnpjRegex.test(value)) return AlertMessageProps.cnpjInvalido;\r\n\r\n  return '';\r\n}","import { InputIds } from \"../enum/InputIds\";\r\nimport { validateCpf } from \"./validateCPF\";\r\nimport { validateCnpj } from \"./validateCnpj\";\r\nimport { validateDataAbertura } from \"./validateDataAbertura\";\r\nimport { validateDataNascimento } from \"./validateDataNascimento\";\r\nimport { validateEmail } from \"./validateEmail\";\r\nimport { validateNome } from \"./validateNome\";\r\nimport { validatePassword } from \"./validatePassword\";\r\nimport { validateRazaoSocial } from \"./validateRazaoSocial\";\r\nimport { validateTelefone } from \"./validateTelefone\";\r\n\r\nexport function validators(idInput: string, value: string): string | undefined {\r\n  switch (idInput) {\r\n    case InputIds.email:\r\n      return validateEmail(value);\r\n    case InputIds.password:\r\n      return validatePassword(value);\r\n    case InputIds.cpf:\r\n      return validateCpf(value);\r\n    case InputIds.nome:\r\n      return validateNome(value);\r\n    case InputIds.dataNascimento:\r\n      return validateDataNascimento(value);\r\n    case InputIds.telefone:\r\n      return validateTelefone(value);\r\n    case InputIds.razaoSocial:\r\n      return validateRazaoSocial(value);\r\n    case InputIds.cnpj:\r\n      return validateCnpj(value);\r\n    case InputIds.dataAbertura:\r\n      return validateDataAbertura(value);\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateEmail(value: string): string | undefined {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!value) return AlertMessageProps.campoObrigatorio;\r\n    if (!emailRegex.test(value)) return AlertMessageProps.emailInvalido;\r\n\r\n    return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validatePassword(value: string): string | undefined {\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  return value.length < 6 ? AlertMessageProps.senhaInvalida : undefined;\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateCpf(value: string): string | undefined {\r\n  const cpf = value.replace(/[^\\d]+/g, '');\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (cpf === '') return AlertMessageProps.campoObrigatorio;\r\n  if (cpf.length !== 11) return AlertMessageProps.cpfInvalido;\r\n  if (cpf === '00000000000' || cpf === '11111111111' || cpf === '22222222222' || cpf === '33333333333' || cpf === '44444444444' || cpf === '55555555555' || cpf === '66666666666' || cpf === '77777777777' || cpf === '88888888888' || cpf === '99999999999') return AlertMessageProps.cpfInvalido;\r\n  let add = 0;\r\n  for (let i = 0; i < 9; i++) add += parseInt(cpf.charAt(i)) * (10 - i);\r\n  let rev = 11 - (add % 11);\r\n  if (rev === 10 || rev === 11) rev = 0;\r\n  if (rev !== parseInt(cpf.charAt(9))) return AlertMessageProps.cpfInvalido;\r\n  add = 0;\r\n  for (let i = 0; i < 10; i++) add += parseInt(cpf.charAt(i)) * (11 - i);\r\n  rev = 11 - (add % 11);\r\n  if (rev === 10 || rev === 11) rev = 0;\r\n  if (rev !== parseInt(cpf.charAt(10))) return AlertMessageProps.cpfInvalido;\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateNome(value: string): string | undefined {\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (value.length < 3) return AlertMessageProps.nomeInvalido;\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateDataNascimento(value: string): string | undefined {\r\n  const dataNascimentoRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (!dataNascimentoRegex.test(value)) return AlertMessageProps.dataNascimentoInvalida;\r\n\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateTelefone(value: string): string | undefined {\r\n  const telefoneRegex = /^\\(\\d{2}\\) \\d{4}-\\d{5}$/;\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (!telefoneRegex.test(value)) return AlertMessageProps.telefoneInvalido;\r\n\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateRazaoSocial(value: string): string | undefined {\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateDataAbertura(value: string): string | undefined {\r\n  const dataNascimentoRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (!dataNascimentoRegex.test(value))\r\n    return AlertMessageProps.dataNascimentoInvalida;\r\n  return \"\";\r\n}\r\n","export function dataMaskFormat(value: string): string {\r\n  return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{2})(\\d)/, '$1/$2')\r\n          .replace(/(\\d{2})(\\d)/, '$1/$2')\r\n          .replace(/(\\d{4})(\\d{1,2})$/, '$1');\r\n}","import { useCallback, useEffect, useState } from \"react\";\r\nimport { validators } from \"../../validators\";\r\nimport { inputMaskFormat } from \"../../util/inputMaskFormat\";\r\nimport InputAlert from \"../InputAlert\";\r\n\r\ninterface Props {\r\n  inputType: string;\r\n  idInput: string;\r\n  labelInput: string;\r\n  maxLenghtProp: number;\r\n  setDynamicAlertMessage?: (id: string, message: string) => void;\r\n  inputValue: string;\r\n  onChangeInputValue: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport default function DynamicInput({\r\n  inputType,\r\n  idInput,\r\n  labelInput,\r\n  maxLenghtProp,\r\n  setDynamicAlertMessage,\r\n  inputValue,\r\n  onChangeInputValue,\r\n}: Props) {\r\n  const [alertMessage, setAlertMessage] = useState<string>(\"\");\r\n\r\n  const updateAlertMessage = useCallback(\r\n    (value: string) => {\r\n      const validationMessage = validators(idInput, value) || \"\";\r\n      if (alertMessage !== validationMessage) {\r\n        setAlertMessage(validationMessage);\r\n        if (setDynamicAlertMessage) {\r\n          setDynamicAlertMessage(idInput, validationMessage);\r\n        }\r\n      }\r\n    },\r\n    [idInput, alertMessage, setDynamicAlertMessage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    updateAlertMessage(inputValue);\r\n  }, [inputValue, updateAlertMessage]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChangeInputValue(event);\r\n    updateAlertMessage(event.target.value);\r\n  };\r\n\r\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    const maskedValue = inputMaskFormat(idInput, event.currentTarget.value);\r\n    event.currentTarget.value = maskedValue;\r\n    updateAlertMessage(maskedValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label\r\n        htmlFor={idInput}\r\n        className=\"block text-sm font-medium text-gray-700\"\r\n      >\r\n        {labelInput}\r\n      </label>\r\n      <input\r\n        onBlur={(event) => updateAlertMessage(event.target.value)}\r\n        onChange={handleChange}\r\n        onKeyUp={handleKeyUp}\r\n        maxLength={maxLenghtProp}\r\n        value={inputValue}\r\n        type={inputType}\r\n        id={idInput}\r\n        className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n      />\r\n      {alertMessage && <InputAlert alertMessage={alertMessage} />}\r\n    </div>\r\n  );\r\n}\r\n","import { InputIds } from \"../enum/InputIds\";\r\nimport { cnpjMaskFormat } from \"./cnpjMaskFormat\";\r\nimport { cpfMaskFormat } from \"./cpfMaskFormat\";\r\nimport { dataMaskFormat } from \"./dataMaskFormat\";\r\nimport { telefoneMaskFormat } from \"./telefoneMaskFormat\";\r\n\r\nexport function inputMaskFormat(idInput: string, value: string): string {\r\n  switch (idInput) {\r\n    case InputIds.cpf:\r\n      return cpfMaskFormat(value);\r\n    case InputIds.dataNascimento:\r\n      return dataMaskFormat(value);\r\n    case InputIds.dataAbertura:\r\n      return dataMaskFormat(value);\r\n    case InputIds.telefone:\r\n      return telefoneMaskFormat(value);\r\n    case InputIds.cnpj:\r\n      return cnpjMaskFormat(value);\r\n    default:\r\n      return value;\r\n  }\r\n}","export function cpfMaskFormat(value: string): string {\r\n  return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d{1,2})$/, '$1-$2');\r\n}","export function telefoneMaskFormat(value: string): string {\r\n  return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{2})(\\d)/, '($1) $2')\r\n          .replace(/(\\d{4})(\\d)/, '$1-$2')\r\n          .replace(/(\\d{4})(\\d{1,4})$/, '$1$2');\r\n}","export function cnpjMaskFormat(value: string): string {\r\n  return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{2})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d)/, '$1/$2')\r\n          .replace(/(\\d{4})(\\d{1,2})$/, '$1-$2');\r\n}","interface Props {\r\n  alertMessage: string;    \r\n}\r\n\r\nexport default function InputAlert({ alertMessage }: Props) {\r\n  return (\r\n    <div>\r\n      <p className=\"text-red-500 text-xs italic\">{alertMessage}</p>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"stepper\":\"stepper_stepper__Hul3+\",\"steplabel\":\"stepper_steplabel__evQnm\"};","import styles from './stepper.module.scss';\r\n\r\ninterface Props {\r\n  activeStep: string;\r\n  maxStep: string;\r\n  labelStep: string;\r\n}\r\n\r\nexport default function Stepper({ activeStep, maxStep, labelStep }: Props) {\r\n  return (\r\n    // role=\"progressbar\" é uma propriedade que indica que o componente é uma barra de progresso\r\n    // aria-live=\"polite\" e aria-atomic=\"true\", são propriedades que indicam que o conteúdo da div é dinâmico e \r\n    // deve ser lido pelo leitor de tela\r\n    <div\r\n      role=\"stepper\"\r\n      aria-valuenow={parseInt(activeStep)}\r\n      aria-valuemin={1}\r\n      aria-valuemax={parseInt(maxStep)}\r\n      aria-label={`Etapa ${activeStep} de ${maxStep}`}\r\n      className={styles.progress}\r\n    >\r\n      <div>\r\n        <span className={styles.steplabel} aria-live=\"polite\" aria-atomic=\"true\">\r\n          Etapa <span>{activeStep}</span> de {maxStep}\r\n        </span>\r\n      </div>\r\n      <h1 aria-live=\"polite\">{labelStep}</h1>\r\n    </div>\r\n  );\r\n}\r\n","export enum AlertMessageProps {\r\n  nomeInvalido = \"Nome inválido\",\r\n  senhaInvalida = \"Senha deve ser maior ou igual a 6 caracteres\",\r\n  emailInvalido = \"E-mail inválido\",\r\n  cpfInvalido = \"CPF inválido\",\r\n  cnpjInvalido = \"CNPJ inválido\",\r\n  dataNascimentoInvalida = \"Data de nascimento inválida\",\r\n  telefoneInvalido = \"Telefone inválido\",\r\n  campoObrigatorio = \"Campo obrigatório\",  \r\n}","export enum ButtonProps {\r\n  voltarButton = \"40%\",\r\n  continuarButton = \"50%\",\r\n}","export enum InputIds {\r\n  dataNascimento = 'dataNascimento',\r\n  email = 'email',\r\n  nome = 'nome',\r\n  password = 'password',\r\n  telefone = 'telefone',\r\n  cpf = 'cpf',\r\n  razaoSocial = 'razaoSocial',\r\n  cnpj = 'cnpj',\r\n  dataAbertura = 'dataAbertura',\r\n}","import React from 'react';\r\nimport FormDataContext from '../context/FormDataContext';\r\n\r\nexport const useFormData = () => {\r\n  const context = React.useContext(FormDataContext);\r\n  if (context === undefined) {\r\n    throw new Error('useFormData must be used within a FormDataProvider');\r\n  }\r\n  return context;\r\n};","import { useState } from \"react\";\r\nimport DynamicButton from \"../../components/DynamicButton\";\r\nimport DynamicInput from \"../../components/DynamicInput\";\r\nimport Stepper from \"../../components/Stepper\";\r\nimport { ButtonProps } from \"../../enum/ButtonProps\";\r\nimport { FormInputProps } from \"../../interfaces/FormInputProps\";\r\nimport { InputIds } from \"../../enum/InputIds\";\r\nimport { useFormData } from \"../../hooks/useFormData\";\r\nimport { UserRegistrationData } from \"../../services/registerUser/type\";\r\nimport { useMutation } from \"react-query\";\r\nimport registerUser from \"../../services/registerUser\";\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\nimport LoadingComponent from \"../../components/LoadingComponent\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Etapa4PF() {\r\n  const { formData, setFormData } = useFormData();\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const [hasAlertMessage, setHasAlertMessage] = useState<{\r\n    [key: string]: string;\r\n  }>({});\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const verifyAccountType = () => { \r\n    if (!formData.accountType) {\r\n      navigate('/registration');\r\n    } \r\n    return;\r\n  }\r\n\r\n  verifyAccountType();\r\n\r\n  const mutation = useMutation(registerUser, {\r\n    onSuccess: (data) => {\r\n      console.log(\"Registration successful\", data);\r\n      setShowAlert(true);\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Registration failed\", error);\r\n      setShowAlert(true);\r\n    },\r\n  });\r\n\r\n  const titleLabel = \"Revise suas informações\";\r\n\r\n  const formInputProps: FormInputProps[] = [\r\n    {\r\n      idInput: InputIds.email,\r\n      labelInput: \"Endereço de e-mail\",\r\n      inputType: \"email\",\r\n      maxLenghtProp: 50,\r\n    },\r\n    {\r\n      idInput: InputIds.nome,\r\n      labelInput: \"Nome\",\r\n      inputType: \"text\",\r\n      maxLenghtProp: 50,\r\n    },\r\n    {\r\n      idInput: InputIds.cpf,\r\n      labelInput: \"CPF\",\r\n      inputType: \"text\",\r\n      maxLenghtProp: 14,\r\n    },\r\n    {\r\n      idInput: InputIds.dataNascimento,\r\n      labelInput: \"Data de Nascimento\",\r\n      inputType: \"text\",\r\n      maxLenghtProp: 10,\r\n    },\r\n    {\r\n      idInput: InputIds.telefone,\r\n      labelInput: \"Telefone\",\r\n      inputType: \"text\",\r\n      maxLenghtProp: 15,\r\n    },\r\n    {\r\n      idInput: InputIds.password,\r\n      labelInput: \"Sua senha\",\r\n      inputType: \"password\",\r\n      maxLenghtProp: 50,\r\n    },\r\n  ];\r\n\r\n  const setDynamicAlertMessage = (id: string, message: string) => {\r\n    setHasAlertMessage((prevMessages) => ({\r\n      ...prevMessages,\r\n      [id]: message,\r\n    }));\r\n  };\r\n\r\n  const handleInputChange = (\r\n    id: string,\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const value = event.target.value;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [id]: value,\r\n    }));\r\n  };\r\n\r\n  const disableButton = !Object.values(hasAlertMessage).some(\r\n    (message) => message !== \"\"\r\n  );\r\n\r\n  const handleRegistration = () => {\r\n    const userRegistrationData: UserRegistrationData = {\r\n      nome: formData.nome,\r\n      email: formData.email,\r\n      cpf: formData.cpf,\r\n      dataNascimento: formData.dataNascimento,\r\n      telefone: formData.telefone,\r\n      password: formData.password,\r\n      accountType: formData.accountType,\r\n    };\r\n\r\n    mutation.mutate(userRegistrationData);\r\n  };\r\n\r\n  const handleCloseAlert = () => {\r\n    setShowAlert(false);\r\n  };\r\n\r\n  const errorResponse = mutation.error as\r\n    | (Error & { response?: { status: number } })\r\n    | undefined;\r\n    \r\n  const messageAlert =\r\n    errorResponse?.response?.status === 400\r\n      ? \"Ops, todos os campos são obrigatórios\"\r\n      : mutation.isSuccess\r\n      ? \"Cadastro realizado com sucesso\"\r\n      : \"Ocorreu um erro ao salvar o formulário\";\r\n\r\n  return (\r\n    <div>\r\n      <Stepper activeStep=\"4\" maxStep=\"4\" labelStep={titleLabel} />\r\n      {formInputProps.map((form, index) => (\r\n        <DynamicInput\r\n          key={`form-pf-input-${form.idInput}-${index}`}\r\n          idInput={form.idInput}\r\n          labelInput={form.labelInput}\r\n          inputType={form.inputType}\r\n          setDynamicAlertMessage={setDynamicAlertMessage}\r\n          maxLenghtProp={form.maxLenghtProp}\r\n          inputValue={formData[form.idInput] || \"\"}\r\n          onChangeInputValue={(e) => handleInputChange(form.idInput, e)}\r\n        />\r\n      ))}\r\n      <DynamicButton label=\"Voltar\" buttonWidth={ButtonProps.voltarButton} />\r\n      <DynamicButton\r\n        label=\"Cadastrar\"\r\n        to=\"\"\r\n        buttonWidth={ButtonProps.continuarButton}\r\n        disableButton={disableButton}\r\n        onClickRegistrarUsuario={handleRegistration}\r\n      />\r\n      { mutation.isLoading && <LoadingComponent />}\r\n      { showAlert ? (\r\n        <CustomAlert\r\n          message={messageAlert}\r\n          onClose={handleCloseAlert}\r\n          onClickRegistrarUsuario={handleRegistration}\r\n          tryAgainButton={!(errorResponse?.response?.status === 400 || mutation.isSuccess)}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst apiURL = 'http://localhost:3002';\r\n\r\nconst api = axios.create({\r\n  baseURL: apiURL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n  },\r\n});\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Verifica se a request tem código de não atutorizada e se a tem uma flag para tentar novamente a requisição\r\n    if (error?.response?.status === 401 && !originalRequest?.__isRetryRequest) {\r\n      originalRequest.retry = true;\r\n      originalRequest.__isRetryRequest = true;  \r\n\r\n      return api(originalRequest);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default api;\r\n","import api from \"../../api\";\r\nimport { UserRegistrationData } from \"./type\";\r\n\r\nconst registerUser = async (formData: UserRegistrationData) => {\r\n  const { data } = await api.post('registration', formData);\r\n  return data;\r\n};\r\n\r\nexport default registerUser;\r\n"],"names":["CustomAlert","_ref","message","onClose","onClickRegistrarUsuario","tryAgainButton","_jsx","className","children","_jsxs","onClick","concat","style","buttonstyled","handleClose","DynamicButton","to","label","buttonWidth","disableButton","navigate","useNavigate","width","handleClick","undefined","styles","voltarbutton","contiuarbutton","disabled","cnpjRegex","validators","idInput","value","InputIds","email","test","AlertMessageProps","emailInvalido","campoObrigatorio","validateEmail","password","length","senhaInvalida","validatePassword","cpf","replace","cpfInvalido","add","i","parseInt","charAt","rev","validateCpf","nome","nomeInvalido","validateNome","dataNascimento","dataNascimentoInvalida","validateDataNascimento","telefone","telefoneInvalido","validateTelefone","razaoSocial","validateRazaoSocial","cnpj","cnpjInvalido","validateCnpj","dataAbertura","validateDataAbertura","dataMaskFormat","DynamicInput","inputType","labelInput","maxLenghtProp","setDynamicAlertMessage","inputValue","onChangeInputValue","alertMessage","setAlertMessage","useState","updateAlertMessage","useCallback","validationMessage","useEffect","htmlFor","onBlur","event","target","onChange","onKeyUp","maskedValue","cpfMaskFormat","telefoneMaskFormat","cnpjMaskFormat","inputMaskFormat","currentTarget","maxLength","type","id","InputAlert","Stepper","activeStep","maxStep","labelStep","role","progress","steplabel","ButtonProps","useFormData","context","React","FormDataContext","Error","Etapa4PF","_errorResponse$respon","_errorResponse$respon2","formData","setFormData","showAlert","setShowAlert","hasAlertMessage","setHasAlertMessage","accountType","mutation","useMutation","registerUser","onSuccess","data","console","log","onError","error","formInputProps","prevMessages","Object","values","some","handleRegistration","userRegistrationData","mutate","errorResponse","messageAlert","response","status","isSuccess","map","form","index","e","handleInputChange","prevData","voltarButton","continuarButton","isLoading","LoadingComponent","handleCloseAlert","api","axios","create","baseURL","headers","interceptors","use","async","_error$response","originalRequest","config","__isRetryRequest","Promise","reject","retry","post"],"sourceRoot":""}