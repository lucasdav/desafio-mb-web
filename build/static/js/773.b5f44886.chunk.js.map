{"version":3,"file":"static/js/773.b5f44886.chunk.js","mappings":"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","sources":["webpack://desafio-mb-web/./src/components/DynamicButton/dynamic-button.module.scss?cc2a","components/DynamicButton/index.tsx","validators/validateCnpj.ts","validators/index.ts","validators/validateEmail.ts","validators/validatePassword.ts","validators/validateCPF.ts","validators/validateNome.ts","validators/validateDataNascimento.ts","validators/validateTelefone.ts","validators/validateRazaoSocial.ts","validators/validateDataAbertura.ts","util/dataMaskFormat.ts","components/DynamicInput/index.tsx","util/inputMaskFormat.ts","util/cpfMaskFormat.ts","util/telefoneMaskFormat.ts","util/cnpjMaskFormat.ts","components/InputAlert/index.tsx","webpack://desafio-mb-web/./src/components/Stepper/stepper.module.scss?105e","components/Stepper/index.tsx","enum/AlertMessageProps.ts","enum/InputIds.ts","hooks/useFormData.ts","components/RadioButton/index.tsx","pages/Etapa1/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contiuarbutton\":\"dynamic-button_contiuarbutton__rwNgg\",\"voltarbutton\":\"dynamic-button_voltarbutton__lXrax\",\"disabled\":\"dynamic-button_disabled__CX2Ge\"};","import styles from \"./dynamic-button.module.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  to?: string;\r\n  label: string;\r\n  buttonWidth?: string;\r\n  disableButton?: boolean;\r\n  onClickRegistrarUsuario?: () => void;\r\n}\r\n\r\nexport default function DynamicButton({\r\n  to,\r\n  label,\r\n  buttonWidth,\r\n  disableButton,\r\n  onClickRegistrarUsuario,\r\n}: Props) {\r\n  const navigate = useNavigate();\r\n\r\n  to = \"/\" + to;\r\n\r\n  const handleClick = () => {\r\n    if (label === \"Voltar\") {\r\n      navigate(-1);\r\n    } else if (label === \"Cadastrar\" && onClickRegistrarUsuario) {\r\n      onClickRegistrarUsuario();\r\n    }\r\n    else {\r\n      navigate(to);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={{ width: buttonWidth ? buttonWidth : \"100%\" }}\r\n      onClick={!disableButton && label !== \"Voltar\" ? undefined : handleClick}\r\n      className={`${\r\n        label === \"Voltar\" ? styles.voltarbutton : styles.contiuarbutton\r\n      }\r\n        ${!disableButton && label !== \"Voltar\"&& styles.disabled}\r\n        inline-block px-4 py-2 text-white font-semibold text-sm rounded-lg shadow-md \r\n        focus:outline-none focus:ring-2 focus:ring-opacity-75`}\r\n      disabled={!disableButton && label !== \"Voltar\"}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nconst cnpjRegex = /^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$/;\r\n\r\nexport function validateCnpj(value: string): string | undefined {\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (!cnpjRegex.test(value)) return AlertMessageProps.cnpjInvalido;\r\n\r\n  return '';\r\n}","import { InputIds } from \"../enum/InputIds\";\r\nimport { validateCpf } from \"./validateCPF\";\r\nimport { validateCnpj } from \"./validateCnpj\";\r\nimport { validateDataAbertura } from \"./validateDataAbertura\";\r\nimport { validateDataNascimento } from \"./validateDataNascimento\";\r\nimport { validateEmail } from \"./validateEmail\";\r\nimport { validateNome } from \"./validateNome\";\r\nimport { validatePassword } from \"./validatePassword\";\r\nimport { validateRazaoSocial } from \"./validateRazaoSocial\";\r\nimport { validateTelefone } from \"./validateTelefone\";\r\n\r\nexport function validators(idInput: string, value: string): string | undefined {\r\n  switch (idInput) {\r\n    case InputIds.email:\r\n      return validateEmail(value);\r\n    case InputIds.password:\r\n      return validatePassword(value);\r\n    case InputIds.cpf:\r\n      return validateCpf(value);\r\n    case InputIds.nome:\r\n      return validateNome(value);\r\n    case InputIds.dataNascimento:\r\n      return validateDataNascimento(value);\r\n    case InputIds.telefone:\r\n      return validateTelefone(value);\r\n    case InputIds.razaoSocial:\r\n      return validateRazaoSocial(value);\r\n    case InputIds.cnpj:\r\n      return validateCnpj(value);\r\n    case InputIds.dataAbertura:\r\n      return validateDataAbertura(value);\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateEmail(value: string): string | undefined {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!value) return AlertMessageProps.campoObrigatorio;\r\n    if (!emailRegex.test(value)) return AlertMessageProps.emailInvalido;\r\n\r\n    return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validatePassword(value: string): string | undefined {\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  return value.length < 6 ? AlertMessageProps.senhaInvalida : undefined;\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateCpf(value: string): string | undefined {\r\n  const cpf = value.replace(/[^\\d]+/g, '');\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (cpf === '') return AlertMessageProps.campoObrigatorio;\r\n  if (cpf.length !== 11) return AlertMessageProps.cpfInvalido;\r\n  if (cpf === '00000000000' || cpf === '11111111111' || cpf === '22222222222' || cpf === '33333333333' || cpf === '44444444444' || cpf === '55555555555' || cpf === '66666666666' || cpf === '77777777777' || cpf === '88888888888' || cpf === '99999999999') return AlertMessageProps.cpfInvalido;\r\n  let add = 0;\r\n  for (let i = 0; i < 9; i++) add += parseInt(cpf.charAt(i)) * (10 - i);\r\n  let rev = 11 - (add % 11);\r\n  if (rev === 10 || rev === 11) rev = 0;\r\n  if (rev !== parseInt(cpf.charAt(9))) return AlertMessageProps.cpfInvalido;\r\n  add = 0;\r\n  for (let i = 0; i < 10; i++) add += parseInt(cpf.charAt(i)) * (11 - i);\r\n  rev = 11 - (add % 11);\r\n  if (rev === 10 || rev === 11) rev = 0;\r\n  if (rev !== parseInt(cpf.charAt(10))) return AlertMessageProps.cpfInvalido;\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateNome(value: string): string | undefined {\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (value.length < 3) return AlertMessageProps.nomeInvalido;\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateDataNascimento(value: string): string | undefined {\r\n  const dataNascimentoRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (!dataNascimentoRegex.test(value)) return AlertMessageProps.dataNascimentoInvalida;\r\n\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateTelefone(value: string): string | undefined {\r\n  const telefoneRegex = /^\\(\\d{2}\\) \\d{4}-\\d{5}$/;\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (!telefoneRegex.test(value)) return AlertMessageProps.telefoneInvalido;\r\n\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateRazaoSocial(value: string): string | undefined {\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  return '';\r\n}","import { AlertMessageProps } from \"../enum/AlertMessageProps\";\r\n\r\nexport function validateDataAbertura(value: string): string | undefined {\r\n  const dataNascimentoRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\r\n  if (!value) return AlertMessageProps.campoObrigatorio;\r\n  if (!dataNascimentoRegex.test(value))\r\n    return AlertMessageProps.dataNascimentoInvalida;\r\n  return \"\";\r\n}\r\n","export function dataMaskFormat(value: string): string {\r\n  return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{2})(\\d)/, '$1/$2')\r\n          .replace(/(\\d{2})(\\d)/, '$1/$2')\r\n          .replace(/(\\d{4})(\\d{1,2})$/, '$1');\r\n}","import { useCallback, useEffect, useState } from \"react\";\r\nimport { validators } from \"../../validators\";\r\nimport { inputMaskFormat } from \"../../util/inputMaskFormat\";\r\nimport InputAlert from \"../InputAlert\";\r\n\r\ninterface Props {\r\n  inputType: string;\r\n  idInput: string;\r\n  labelInput: string;\r\n  maxLenghtProp: number;\r\n  setDynamicAlertMessage?: (id: string, message: string) => void;\r\n  inputValue: string;\r\n  onChangeInputValue: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport default function DynamicInput({\r\n  inputType,\r\n  idInput,\r\n  labelInput,\r\n  maxLenghtProp,\r\n  setDynamicAlertMessage,\r\n  inputValue,\r\n  onChangeInputValue,\r\n}: Props) {\r\n  const [alertMessage, setAlertMessage] = useState<string>(\"\");\r\n  const [inputFieldType, setInputFieldType] = useState<string>(inputType);\r\n\r\n  const updateAlertMessage = useCallback((value: string) => {\r\n    const validationMessage = validators(idInput, value) || \"\";\r\n    if (alertMessage !== validationMessage) {\r\n      setAlertMessage(validationMessage);\r\n      if (setDynamicAlertMessage) {\r\n        setDynamicAlertMessage(idInput, validationMessage);\r\n      }\r\n    }\r\n  }, [idInput, alertMessage, setDynamicAlertMessage]);\r\n\r\n  useEffect(() => {\r\n    updateAlertMessage(inputValue);\r\n  }, [inputValue, updateAlertMessage]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChangeInputValue(event);\r\n    updateAlertMessage(event.target.value);\r\n  };\r\n\r\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    const maskedValue = inputMaskFormat(idInput, event.currentTarget.value);\r\n    event.currentTarget.value = maskedValue;\r\n    updateAlertMessage(maskedValue);\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setInputFieldType(inputFieldType === 'password' ? 'text' : 'password');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={idInput} className=\"block text-sm font-medium text-gray-700\">\r\n        {labelInput}\r\n      </label>\r\n      <div className=\"flex\">\r\n        <input\r\n          onBlur={(event) => updateAlertMessage(event.target.value)}\r\n          onChange={handleChange}\r\n          onKeyUp={handleKeyUp}\r\n          maxLength={maxLenghtProp}\r\n          value={inputValue}\r\n          type={inputFieldType}\r\n          id={idInput}\r\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n        />\r\n        {idInput === 'password' && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={togglePasswordVisibility}\r\n            className=\"ml-2 px-2 py-2 bg-blue-500 text-white font-bold rounded hover:bg-blue-700 transition duration-300\"\r\n          >\r\n            {inputFieldType === 'password' ? 'Mostrar' : 'Ocultar'}\r\n          </button>\r\n        )}\r\n      </div>\r\n      {alertMessage && <InputAlert alertMessage={alertMessage} />}\r\n    </div>\r\n  );\r\n}","import { InputIds } from \"../enum/InputIds\";\r\nimport { cnpjMaskFormat } from \"./cnpjMaskFormat\";\r\nimport { cpfMaskFormat } from \"./cpfMaskFormat\";\r\nimport { dataMaskFormat } from \"./dataMaskFormat\";\r\nimport { telefoneMaskFormat } from \"./telefoneMaskFormat\";\r\n\r\nexport function inputMaskFormat(idInput: string, value: string): string {\r\n  switch (idInput) {\r\n    case InputIds.cpf:\r\n      return cpfMaskFormat(value);\r\n    case InputIds.dataNascimento:\r\n      return dataMaskFormat(value);\r\n    case InputIds.dataAbertura:\r\n      return dataMaskFormat(value);\r\n    case InputIds.telefone:\r\n      return telefoneMaskFormat(value);\r\n    case InputIds.cnpj:\r\n      return cnpjMaskFormat(value);\r\n    default:\r\n      return value;\r\n  }\r\n}","export function cpfMaskFormat(value: string): string {\r\n  return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d{1,2})$/, '$1-$2');\r\n}","export function telefoneMaskFormat(value: string): string {\r\n  return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{2})(\\d)/, '($1) $2')\r\n          .replace(/(\\d{4})(\\d)/, '$1-$2')\r\n          .replace(/(\\d{4})(\\d{1,4})$/, '$1$2');\r\n}","export function cnpjMaskFormat(value: string): string {\r\n  return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{2})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d)/, '$1/$2')\r\n          .replace(/(\\d{4})(\\d{1,2})$/, '$1-$2');\r\n}","interface Props {\r\n  alertMessage: string;    \r\n}\r\n\r\nexport default function InputAlert({ alertMessage }: Props) {\r\n  return (\r\n    <div>\r\n      <p className=\"text-red-500 text-xs italic\">{alertMessage}</p>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"stepper\":\"stepper_stepper__Hul3+\",\"steplabel\":\"stepper_steplabel__evQnm\"};","import styles from './stepper.module.scss';\r\n\r\ninterface Props {\r\n  activeStep: string;\r\n  maxStep: string;\r\n  labelStep: string;\r\n}\r\n\r\nexport default function Stepper({ activeStep, maxStep, labelStep }: Props) {\r\n  return (\r\n    // role=\"progressbar\" é uma propriedade que indica que o componente é uma barra de progresso\r\n    // aria-live=\"polite\" e aria-atomic=\"true\", são propriedades que indicam que o conteúdo da div é dinâmico e \r\n    // deve ser lido pelo leitor de tela\r\n    <div\r\n      role=\"stepper\"\r\n      aria-valuenow={parseInt(activeStep)}\r\n      aria-valuemin={1}\r\n      aria-valuemax={parseInt(maxStep)}\r\n      aria-label={`Etapa ${activeStep} de ${maxStep}`}\r\n      className={styles.progress}\r\n    >\r\n      <div>\r\n        <span className={styles.steplabel} aria-live=\"polite\" aria-atomic=\"true\">\r\n          Etapa <span>{activeStep}</span> de {maxStep}\r\n        </span>\r\n      </div>\r\n      <h1 aria-live=\"polite\">{labelStep}</h1>\r\n    </div>\r\n  );\r\n}\r\n","export enum AlertMessageProps {\r\n  nomeInvalido = \"Nome inválido\",\r\n  senhaInvalida = \"Senha deve ser maior ou igual a 6 caracteres\",\r\n  emailInvalido = \"E-mail inválido\",\r\n  cpfInvalido = \"CPF inválido\",\r\n  cnpjInvalido = \"CNPJ inválido\",\r\n  dataNascimentoInvalida = \"Data de nascimento inválida\",\r\n  telefoneInvalido = \"Telefone inválido\",\r\n  campoObrigatorio = \"Campo obrigatório\",  \r\n}","export enum InputIds {\r\n  dataNascimento = 'dataNascimento',\r\n  email = 'email',\r\n  nome = 'nome',\r\n  password = 'password',\r\n  telefone = 'telefone',\r\n  cpf = 'cpf',\r\n  razaoSocial = 'razaoSocial',\r\n  cnpj = 'cnpj',\r\n  dataAbertura = 'dataAbertura',\r\n}","import React from 'react';\r\nimport FormDataContext from '../context/FormDataContext';\r\n\r\nexport const useFormData = () => {\r\n  const context = React.useContext(FormDataContext);\r\n  if (context === undefined) {\r\n    throw new Error('useFormData must be used within a FormDataProvider');\r\n  }\r\n  return context;\r\n};","import { AlertMessageProps } from \"../../enum/AlertMessageProps\";\r\nimport Alert from \"../InputAlert\";\r\n\r\ninterface Props {\r\n  options: { label: string; value: string }[];\r\n  name: string;\r\n  selectedPersonType: string;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport default function RadioButton({\r\n  options,\r\n  name,\r\n  selectedPersonType,\r\n  onChange,\r\n}: Props) {\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <div className=\"flex\">\r\n        {options.map((option) => (\r\n          <div key={option.value} className=\"flex items-center mb-1\">\r\n            <input\r\n              type=\"radio\"\r\n              id={option.value}\r\n              name={name}\r\n              value={option.value}\r\n              checked={selectedPersonType === option.value}\r\n              onChange={onChange}\r\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"\r\n            />\r\n            <label\r\n              htmlFor={option.value}\r\n              className=\"ml-1 mr-2 block text-sm text-gray-900\"\r\n            >\r\n              {option.label}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {!selectedPersonType && (\r\n        <Alert alertMessage={AlertMessageProps.campoObrigatorio} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport DynamicButton from \"../../components/DynamicButton\";\r\nimport DynamicInput from \"../../components/DynamicInput\";\r\nimport Stepper from \"../../components/Stepper\";\r\nimport RadioButton from \"../../components/RadioButton\";\r\nimport { FormInputProps } from \"../../interfaces/FormInputProps\";\r\nimport { InputIds } from \"../../enum/InputIds\";\r\nimport { useFormData } from \"../../hooks/useFormData\";\r\n\r\nexport default function Etapa1() {\r\n  const { setFormData } = useFormData();\r\n  const [localInputValues, setLocalInputValues] = useState<{\r\n    [key: string]: string;\r\n  }>({});\r\n  const [hasAlertMessage, setHasAlertMessage] = useState<{\r\n    [key: string]: string;\r\n  }>({});\r\n  const [selectedPersonType, setSelectedPersonType] = useState<string>(\"\");\r\n\r\n  const titleLabel = \"Seja bem vindo(a)\";\r\n\r\n  const radioOptions = [\r\n    { label: \"Pessoa física\", value: \"pf\" },\r\n    { label: \"Pessoa jurídica\", value: \"pj\" },\r\n  ];\r\n\r\n  const formInputProps: FormInputProps = {\r\n    idInput: InputIds.email,\r\n    labelInput: \"Endereço de e-mail\",\r\n    inputType: \"email\",\r\n    maxLenghtProp: 50,\r\n  };\r\n  const setDynamicAlertMessage = (id: string, message: string) => {\r\n    setHasAlertMessage((prevMessages) => ({\r\n      ...prevMessages,\r\n      [id]: message,\r\n    }));\r\n  };\r\n\r\n  const handleInputChange = (\r\n    id: string,\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const value = event.target.value;\r\n    setLocalInputValues((prevValues) => ({\r\n      ...prevValues,\r\n      [id]: value,\r\n    }));\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [id]: value,\r\n    }));\r\n  };\r\n\r\n  const handlePersonTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value;\r\n    setSelectedPersonType(value);\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      accountType: value,\r\n    }));\r\n  };\r\n\r\n  const disableButton =\r\n    !Object.values(hasAlertMessage).some((message) => message !== \"\") &&\r\n    selectedPersonType !== \"\";\r\n\r\n  return (\r\n    <div>\r\n      <Stepper activeStep=\"1\" maxStep=\"4\" labelStep={titleLabel} />\r\n      <DynamicInput\r\n        idInput={formInputProps.idInput}\r\n        labelInput={formInputProps.labelInput}\r\n        inputType={formInputProps.inputType}\r\n        setDynamicAlertMessage={setDynamicAlertMessage}\r\n        maxLenghtProp={formInputProps.maxLenghtProp}\r\n        inputValue={localInputValues[formInputProps.idInput] || \"\"}\r\n        onChangeInputValue={(e) => handleInputChange(formInputProps.idInput, e)}\r\n      />\r\n\r\n      <RadioButton\r\n        options={radioOptions}\r\n        name=\"example\"\r\n        selectedPersonType={selectedPersonType}\r\n        onChange={handlePersonTypeChange}\r\n      />\r\n\r\n      <DynamicButton\r\n        label=\"Continuar\"\r\n        to={`etapa2-${selectedPersonType}`}\r\n        disableButton={disableButton}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["DynamicButton","_ref","to","label","buttonWidth","disableButton","onClickRegistrarUsuario","navigate","useNavigate","_jsx","style","width","onClick","handleClick","undefined","className","concat","styles","voltarbutton","contiuarbutton","disabled","children","cnpjRegex","validators","idInput","value","InputIds","email","test","AlertMessageProps","emailInvalido","campoObrigatorio","validateEmail","password","length","senhaInvalida","validatePassword","cpf","replace","cpfInvalido","add","i","parseInt","charAt","rev","validateCpf","nome","nomeInvalido","validateNome","dataNascimento","dataNascimentoInvalida","validateDataNascimento","telefone","telefoneInvalido","validateTelefone","razaoSocial","validateRazaoSocial","cnpj","cnpjInvalido","validateCnpj","dataAbertura","validateDataAbertura","dataMaskFormat","DynamicInput","inputType","labelInput","maxLenghtProp","setDynamicAlertMessage","inputValue","onChangeInputValue","alertMessage","setAlertMessage","useState","inputFieldType","setInputFieldType","updateAlertMessage","useCallback","validationMessage","useEffect","_jsxs","htmlFor","onBlur","event","target","onChange","onKeyUp","maskedValue","cpfMaskFormat","telefoneMaskFormat","cnpjMaskFormat","inputMaskFormat","currentTarget","maxLength","type","id","togglePasswordVisibility","InputAlert","Stepper","activeStep","maxStep","labelStep","role","progress","steplabel","useFormData","context","React","FormDataContext","Error","RadioButton","options","name","selectedPersonType","map","option","checked","Alert","Etapa1","setFormData","localInputValues","setLocalInputValues","hasAlertMessage","setHasAlertMessage","setSelectedPersonType","formInputProps","Object","values","some","message","prevMessages","e","handleInputChange","prevValues","prevData","accountType"],"sourceRoot":""}